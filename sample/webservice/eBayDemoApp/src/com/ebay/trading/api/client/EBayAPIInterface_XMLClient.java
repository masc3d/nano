// Generated by wsdl compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api.client;


import com.ebay.trading.api.*;
import com.leansoft.nano.ws.NanoXMLClient;
import com.leansoft.nano.ws.XMLServiceCallback;


/**
 * This class is the XML client to the EBayAPIInterface Web Service.
 */
public class EBayAPIInterface_XMLClient extends NanoXMLClient {


    /**
     * public method
     */
    public void addDispute(AddDisputeRequestType requestObject, XMLServiceCallback<AddDisputeResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddDisputeResponseType.class);
    }

    /**
     * public method
     */
    public void addDisputeResponse(AddDisputeResponseRequestType requestObject, XMLServiceCallback<AddDisputeResponseResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddDisputeResponseResponseType.class);
    }

    /**
     * public method
     */
    public void addFixedPriceItem(AddFixedPriceItemRequestType requestObject, XMLServiceCallback<AddFixedPriceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void addItem(AddItemRequestType requestObject, XMLServiceCallback<AddItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddItemResponseType.class);
    }

    /**
     * public method
     */
    public void addItemFromSellingManagerTemplate(AddItemFromSellingManagerTemplateRequestType requestObject, XMLServiceCallback<AddItemFromSellingManagerTemplateResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddItemFromSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void addItems(AddItemsRequestType requestObject, XMLServiceCallback<AddItemsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddItemsResponseType.class);
    }

    /**
     * public method
     */
    public void addMemberMessageAAQToPartner(AddMemberMessageAAQToPartnerRequestType requestObject, XMLServiceCallback<AddMemberMessageAAQToPartnerResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddMemberMessageAAQToPartnerResponseType.class);
    }

    /**
     * public method
     */
    public void addMemberMessageRTQ(AddMemberMessageRTQRequestType requestObject, XMLServiceCallback<AddMemberMessageRTQResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddMemberMessageRTQResponseType.class);
    }

    /**
     * public method
     */
    public void addMemberMessagesAAQToBidder(AddMemberMessagesAAQToBidderRequestType requestObject, XMLServiceCallback<AddMemberMessagesAAQToBidderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddMemberMessagesAAQToBidderResponseType.class);
    }

    /**
     * public method
     */
    public void addOrder(AddOrderRequestType requestObject, XMLServiceCallback<AddOrderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddOrderResponseType.class);
    }

    /**
     * public method
     */
    public void addSecondChanceItem(AddSecondChanceItemRequestType requestObject, XMLServiceCallback<AddSecondChanceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddSecondChanceItemResponseType.class);
    }

    /**
     * public method
     */
    public void addSellingManagerInventoryFolder(AddSellingManagerInventoryFolderRequestType requestObject, XMLServiceCallback<AddSellingManagerInventoryFolderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void addSellingManagerProduct(AddSellingManagerProductRequestType requestObject, XMLServiceCallback<AddSellingManagerProductResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddSellingManagerProductResponseType.class);
    }

    /**
     * public method
     */
    public void addSellingManagerTemplate(AddSellingManagerTemplateRequestType requestObject, XMLServiceCallback<AddSellingManagerTemplateResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void addToItemDescription(AddToItemDescriptionRequestType requestObject, XMLServiceCallback<AddToItemDescriptionResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddToItemDescriptionResponseType.class);
    }

    /**
     * public method
     */
    public void addToWatchList(AddToWatchListRequestType requestObject, XMLServiceCallback<AddToWatchListResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddToWatchListResponseType.class);
    }

    /**
     * public method
     */
    public void addTransactionConfirmationItem(AddTransactionConfirmationItemRequestType requestObject, XMLServiceCallback<AddTransactionConfirmationItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, AddTransactionConfirmationItemResponseType.class);
    }

    /**
     * public method
     */
    public void completeSale(CompleteSaleRequestType requestObject, XMLServiceCallback<CompleteSaleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, CompleteSaleResponseType.class);
    }

    /**
     * public method
     */
    public void confirmIdentity(ConfirmIdentityRequestType requestObject, XMLServiceCallback<ConfirmIdentityResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ConfirmIdentityResponseType.class);
    }

    /**
     * public method
     */
    public void deleteMyMessages(DeleteMyMessagesRequestType requestObject, XMLServiceCallback<DeleteMyMessagesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DeleteMyMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerInventoryFolder(DeleteSellingManagerInventoryFolderRequestType requestObject, XMLServiceCallback<DeleteSellingManagerInventoryFolderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DeleteSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerItemAutomationRule(DeleteSellingManagerItemAutomationRuleRequestType requestObject, XMLServiceCallback<DeleteSellingManagerItemAutomationRuleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DeleteSellingManagerItemAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerProduct(DeleteSellingManagerProductRequestType requestObject, XMLServiceCallback<DeleteSellingManagerProductResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DeleteSellingManagerProductResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerTemplate(DeleteSellingManagerTemplateRequestType requestObject, XMLServiceCallback<DeleteSellingManagerTemplateResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DeleteSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerTemplateAutomationRule(DeleteSellingManagerTemplateAutomationRuleRequestType requestObject, XMLServiceCallback<DeleteSellingManagerTemplateAutomationRuleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DeleteSellingManagerTemplateAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void disableUnpaidItemAssistance(DisableUnpaidItemAssistanceRequestType requestObject, XMLServiceCallback<DisableUnpaidItemAssistanceResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, DisableUnpaidItemAssistanceResponseType.class);
    }

    /**
     * public method
     */
    public void endFixedPriceItem(EndFixedPriceItemRequestType requestObject, XMLServiceCallback<EndFixedPriceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, EndFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void endItem(EndItemRequestType requestObject, XMLServiceCallback<EndItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, EndItemResponseType.class);
    }

    /**
     * public method
     */
    public void endItems(EndItemsRequestType requestObject, XMLServiceCallback<EndItemsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, EndItemsResponseType.class);
    }

    /**
     * public method
     */
    public void extendSiteHostedPictures(ExtendSiteHostedPicturesRequestType requestObject, XMLServiceCallback<ExtendSiteHostedPicturesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ExtendSiteHostedPicturesResponseType.class);
    }

    /**
     * public method
     */
    public void fetchToken(FetchTokenRequestType requestObject, XMLServiceCallback<FetchTokenResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, FetchTokenResponseType.class);
    }

    /**
     * public method
     */
    public void getAccount(GetAccountRequestType requestObject, XMLServiceCallback<GetAccountResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetAccountResponseType.class);
    }

    /**
     * public method
     */
    public void getAdFormatLeads(GetAdFormatLeadsRequestType requestObject, XMLServiceCallback<GetAdFormatLeadsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetAdFormatLeadsResponseType.class);
    }

    /**
     * public method
     */
    public void getAllBidders(GetAllBiddersRequestType requestObject, XMLServiceCallback<GetAllBiddersResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetAllBiddersResponseType.class);
    }

    /**
     * public method
     */
    public void getApiAccessRules(GetApiAccessRulesRequestType requestObject, XMLServiceCallback<GetApiAccessRulesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetApiAccessRulesResponseType.class);
    }

    /**
     * public method
     */
    public void getAttributesCS(GetAttributesCSRequestType requestObject, XMLServiceCallback<GetAttributesCSResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetAttributesCSResponseType.class);
    }

    /**
     * public method
     */
    public void getAttributesXSL(GetAttributesXSLRequestType requestObject, XMLServiceCallback<GetAttributesXSLResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetAttributesXSLResponseType.class);
    }

    /**
     * public method
     */
    public void getBestOffers(GetBestOffersRequestType requestObject, XMLServiceCallback<GetBestOffersResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetBestOffersResponseType.class);
    }

    /**
     * public method
     */
    public void getBidderList(GetBidderListRequestType requestObject, XMLServiceCallback<GetBidderListResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetBidderListResponseType.class);
    }

    /**
     * public method
     */
    public void getCategories(GetCategoriesRequestType requestObject, XMLServiceCallback<GetCategoriesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCategoriesResponseType.class);
    }

    /**
     * public method
     */
    public void getCategory2CS(GetCategory2CSRequestType requestObject, XMLServiceCallback<GetCategory2CSResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCategory2CSResponseType.class);
    }

    /**
     * public method
     */
    public void getCategoryFeatures(GetCategoryFeaturesRequestType requestObject, XMLServiceCallback<GetCategoryFeaturesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCategoryFeaturesResponseType.class);
    }

    /**
     * public method
     */
    public void getCategoryMappings(GetCategoryMappingsRequestType requestObject, XMLServiceCallback<GetCategoryMappingsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCategoryMappingsResponseType.class);
    }

    /**
     * public method
     */
    public void getCategorySpecifics(GetCategorySpecificsRequestType requestObject, XMLServiceCallback<GetCategorySpecificsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCategorySpecificsResponseType.class);
    }

    /**
     * public method
     */
    public void getChallengeToken(GetChallengeTokenRequestType requestObject, XMLServiceCallback<GetChallengeTokenResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetChallengeTokenResponseType.class);
    }

    /**
     * public method
     */
    public void getCharities(GetCharitiesRequestType requestObject, XMLServiceCallback<GetCharitiesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCharitiesResponseType.class);
    }

    /**
     * public method
     */
    public void getClientAlertsAuthToken(GetClientAlertsAuthTokenRequestType requestObject, XMLServiceCallback<GetClientAlertsAuthTokenResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetClientAlertsAuthTokenResponseType.class);
    }

    /**
     * public method
     */
    public void getContextualKeywords(GetContextualKeywordsRequestType requestObject, XMLServiceCallback<GetContextualKeywordsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetContextualKeywordsResponseType.class);
    }

    /**
     * public method
     */
    public void getCrossPromotions(GetCrossPromotionsRequestType requestObject, XMLServiceCallback<GetCrossPromotionsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetCrossPromotionsResponseType.class);
    }

    /**
     * public method
     */
    public void getDescriptionTemplates(GetDescriptionTemplatesRequestType requestObject, XMLServiceCallback<GetDescriptionTemplatesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetDescriptionTemplatesResponseType.class);
    }

    /**
     * public method
     */
    public void getDispute(GetDisputeRequestType requestObject, XMLServiceCallback<GetDisputeResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetDisputeResponseType.class);
    }

    /**
     * public method
     */
    public void getFeedback(GetFeedbackRequestType requestObject, XMLServiceCallback<GetFeedbackResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void getItem(GetItemRequestType requestObject, XMLServiceCallback<GetItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetItemResponseType.class);
    }

    /**
     * public method
     */
    public void getItemRecommendations(GetItemRecommendationsRequestType requestObject, XMLServiceCallback<GetItemRecommendationsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetItemRecommendationsResponseType.class);
    }

    /**
     * public method
     */
    public void getItemShipping(GetItemShippingRequestType requestObject, XMLServiceCallback<GetItemShippingResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetItemShippingResponseType.class);
    }

    /**
     * public method
     */
    public void getItemTransactions(GetItemTransactionsRequestType requestObject, XMLServiceCallback<GetItemTransactionsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetItemTransactionsResponseType.class);
    }

    /**
     * public method
     */
    public void getItemsAwaitingFeedback(GetItemsAwaitingFeedbackRequestType requestObject, XMLServiceCallback<GetItemsAwaitingFeedbackResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetItemsAwaitingFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void getMemberMessages(GetMemberMessagesRequestType requestObject, XMLServiceCallback<GetMemberMessagesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetMemberMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void getMessagePreferences(GetMessagePreferencesRequestType requestObject, XMLServiceCallback<GetMessagePreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetMessagePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getMyMessages(GetMyMessagesRequestType requestObject, XMLServiceCallback<GetMyMessagesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetMyMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void getMyeBayBuying(GetMyeBayBuyingRequestType requestObject, XMLServiceCallback<GetMyeBayBuyingResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetMyeBayBuyingResponseType.class);
    }

    /**
     * public method
     */
    public void getMyeBayReminders(GetMyeBayRemindersRequestType requestObject, XMLServiceCallback<GetMyeBayRemindersResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetMyeBayRemindersResponseType.class);
    }

    /**
     * public method
     */
    public void getMyeBaySelling(GetMyeBaySellingRequestType requestObject, XMLServiceCallback<GetMyeBaySellingResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetMyeBaySellingResponseType.class);
    }

    /**
     * public method
     */
    public void getNotificationPreferences(GetNotificationPreferencesRequestType requestObject, XMLServiceCallback<GetNotificationPreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetNotificationPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getNotificationsUsage(GetNotificationsUsageRequestType requestObject, XMLServiceCallback<GetNotificationsUsageResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetNotificationsUsageResponseType.class);
    }

    /**
     * public method
     */
    public void getOrderTransactions(GetOrderTransactionsRequestType requestObject, XMLServiceCallback<GetOrderTransactionsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetOrderTransactionsResponseType.class);
    }

    /**
     * public method
     */
    public void getOrders(GetOrdersRequestType requestObject, XMLServiceCallback<GetOrdersResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetOrdersResponseType.class);
    }

    /**
     * public method
     */
    public void getProductFamilyMembers(GetProductFamilyMembersRequestType requestObject, XMLServiceCallback<GetProductFamilyMembersResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetProductFamilyMembersResponseType.class);
    }

    /**
     * public method
     */
    public void getProductFinder(GetProductFinderRequestType requestObject, XMLServiceCallback<GetProductFinderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetProductFinderResponseType.class);
    }

    /**
     * public method
     */
    public void getProductFinderXSL(GetProductFinderXSLRequestType requestObject, XMLServiceCallback<GetProductFinderXSLResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetProductFinderXSLResponseType.class);
    }

    /**
     * public method
     */
    public void getProductSearchPage(GetProductSearchPageRequestType requestObject, XMLServiceCallback<GetProductSearchPageResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetProductSearchPageResponseType.class);
    }

    /**
     * public method
     */
    public void getProductSearchResults(GetProductSearchResultsRequestType requestObject, XMLServiceCallback<GetProductSearchResultsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetProductSearchResultsResponseType.class);
    }

    /**
     * public method
     */
    public void getProductSellingPages(GetProductSellingPagesRequestType requestObject, XMLServiceCallback<GetProductSellingPagesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetProductSellingPagesResponseType.class);
    }

    /**
     * public method
     */
    public void getPromotionRules(GetPromotionRulesRequestType requestObject, XMLServiceCallback<GetPromotionRulesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetPromotionRulesResponseType.class);
    }

    /**
     * public method
     */
    public void getPromotionalSaleDetails(GetPromotionalSaleDetailsRequestType requestObject, XMLServiceCallback<GetPromotionalSaleDetailsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetPromotionalSaleDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerDashboard(GetSellerDashboardRequestType requestObject, XMLServiceCallback<GetSellerDashboardResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellerDashboardResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerEvents(GetSellerEventsRequestType requestObject, XMLServiceCallback<GetSellerEventsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellerEventsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerList(GetSellerListRequestType requestObject, XMLServiceCallback<GetSellerListResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellerListResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerPayments(GetSellerPaymentsRequestType requestObject, XMLServiceCallback<GetSellerPaymentsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellerPaymentsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerTransactions(GetSellerTransactionsRequestType requestObject, XMLServiceCallback<GetSellerTransactionsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellerTransactionsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerAlerts(GetSellingManagerAlertsRequestType requestObject, XMLServiceCallback<GetSellingManagerAlertsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerAlertsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerEmailLog(GetSellingManagerEmailLogRequestType requestObject, XMLServiceCallback<GetSellingManagerEmailLogResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerEmailLogResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerInventory(GetSellingManagerInventoryRequestType requestObject, XMLServiceCallback<GetSellingManagerInventoryResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerInventoryResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerInventoryFolder(GetSellingManagerInventoryFolderRequestType requestObject, XMLServiceCallback<GetSellingManagerInventoryFolderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerItemAutomationRule(GetSellingManagerItemAutomationRuleRequestType requestObject, XMLServiceCallback<GetSellingManagerItemAutomationRuleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerItemAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerSaleRecord(GetSellingManagerSaleRecordRequestType requestObject, XMLServiceCallback<GetSellingManagerSaleRecordResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerSaleRecordResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerSoldListings(GetSellingManagerSoldListingsRequestType requestObject, XMLServiceCallback<GetSellingManagerSoldListingsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerSoldListingsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerTemplateAutomationRule(GetSellingManagerTemplateAutomationRuleRequestType requestObject, XMLServiceCallback<GetSellingManagerTemplateAutomationRuleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerTemplateAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerTemplates(GetSellingManagerTemplatesRequestType requestObject, XMLServiceCallback<GetSellingManagerTemplatesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSellingManagerTemplatesResponseType.class);
    }

    /**
     * public method
     */
    public void getSessionID(GetSessionIDRequestType requestObject, XMLServiceCallback<GetSessionIDResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSessionIDResponseType.class);
    }

    /**
     * public method
     */
    public void getShippingDiscountProfiles(GetShippingDiscountProfilesRequestType requestObject, XMLServiceCallback<GetShippingDiscountProfilesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetShippingDiscountProfilesResponseType.class);
    }

    /**
     * public method
     */
    public void getStore(GetStoreRequestType requestObject, XMLServiceCallback<GetStoreResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetStoreResponseType.class);
    }

    /**
     * public method
     */
    public void getStoreCategoryUpdateStatus(GetStoreCategoryUpdateStatusRequestType requestObject, XMLServiceCallback<GetStoreCategoryUpdateStatusResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetStoreCategoryUpdateStatusResponseType.class);
    }

    /**
     * public method
     */
    public void getStoreCustomPage(GetStoreCustomPageRequestType requestObject, XMLServiceCallback<GetStoreCustomPageResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetStoreCustomPageResponseType.class);
    }

    /**
     * public method
     */
    public void getStoreOptions(GetStoreOptionsRequestType requestObject, XMLServiceCallback<GetStoreOptionsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetStoreOptionsResponseType.class);
    }

    /**
     * public method
     */
    public void getStorePreferences(GetStorePreferencesRequestType requestObject, XMLServiceCallback<GetStorePreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetStorePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getSuggestedCategories(GetSuggestedCategoriesRequestType requestObject, XMLServiceCallback<GetSuggestedCategoriesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetSuggestedCategoriesResponseType.class);
    }

    /**
     * public method
     */
    public void getTaxTable(GetTaxTableRequestType requestObject, XMLServiceCallback<GetTaxTableResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetTaxTableResponseType.class);
    }

    /**
     * public method
     */
    public void getTokenStatus(GetTokenStatusRequestType requestObject, XMLServiceCallback<GetTokenStatusResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetTokenStatusResponseType.class);
    }

    /**
     * public method
     */
    public void getUser(GetUserRequestType requestObject, XMLServiceCallback<GetUserResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetUserResponseType.class);
    }

    /**
     * public method
     */
    public void getUserContactDetails(GetUserContactDetailsRequestType requestObject, XMLServiceCallback<GetUserContactDetailsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetUserContactDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void getUserDisputes(GetUserDisputesRequestType requestObject, XMLServiceCallback<GetUserDisputesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetUserDisputesResponseType.class);
    }

    /**
     * public method
     */
    public void getUserPreferences(GetUserPreferencesRequestType requestObject, XMLServiceCallback<GetUserPreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetUserPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getVeROReasonCodeDetails(GetVeROReasonCodeDetailsRequestType requestObject, XMLServiceCallback<GetVeROReasonCodeDetailsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetVeROReasonCodeDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void getVeROReportStatus(GetVeROReportStatusRequestType requestObject, XMLServiceCallback<GetVeROReportStatusResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetVeROReportStatusResponseType.class);
    }

    /**
     * public method
     */
    public void getWantItNowPost(GetWantItNowPostRequestType requestObject, XMLServiceCallback<GetWantItNowPostResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetWantItNowPostResponseType.class);
    }

    /**
     * public method
     */
    public void getWantItNowSearchResults(GetWantItNowSearchResultsRequestType requestObject, XMLServiceCallback<GetWantItNowSearchResultsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GetWantItNowSearchResultsResponseType.class);
    }

    /**
     * public method
     */
    public void geteBayDetails(GeteBayDetailsRequestType requestObject, XMLServiceCallback<GeteBayDetailsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GeteBayDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void geteBayOfficialTime(GeteBayOfficialTimeRequestType requestObject, XMLServiceCallback<GeteBayOfficialTimeResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, GeteBayOfficialTimeResponseType.class);
    }

    /**
     * public method
     */
    public void issueRefund(IssueRefundRequestType requestObject, XMLServiceCallback<IssueRefundResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, IssueRefundResponseType.class);
    }

    /**
     * public method
     */
    public void leaveFeedback(LeaveFeedbackRequestType requestObject, XMLServiceCallback<LeaveFeedbackResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, LeaveFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void moveSellingManagerInventoryFolder(MoveSellingManagerInventoryFolderRequestType requestObject, XMLServiceCallback<MoveSellingManagerInventoryFolderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, MoveSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void placeOffer(PlaceOfferRequestType requestObject, XMLServiceCallback<PlaceOfferResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, PlaceOfferResponseType.class);
    }

    /**
     * public method
     */
    public void relistFixedPriceItem(RelistFixedPriceItemRequestType requestObject, XMLServiceCallback<RelistFixedPriceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RelistFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void relistItem(RelistItemRequestType requestObject, XMLServiceCallback<RelistItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RelistItemResponseType.class);
    }

    /**
     * public method
     */
    public void removeFromWatchList(RemoveFromWatchListRequestType requestObject, XMLServiceCallback<RemoveFromWatchListResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RemoveFromWatchListResponseType.class);
    }

    /**
     * public method
     */
    public void respondToBestOffer(RespondToBestOfferRequestType requestObject, XMLServiceCallback<RespondToBestOfferResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RespondToBestOfferResponseType.class);
    }

    /**
     * public method
     */
    public void respondToFeedback(RespondToFeedbackRequestType requestObject, XMLServiceCallback<RespondToFeedbackResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RespondToFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void respondToWantItNowPost(RespondToWantItNowPostRequestType requestObject, XMLServiceCallback<RespondToWantItNowPostResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RespondToWantItNowPostResponseType.class);
    }

    /**
     * public method
     */
    public void reviseCheckoutStatus(ReviseCheckoutStatusRequestType requestObject, XMLServiceCallback<ReviseCheckoutStatusResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseCheckoutStatusResponseType.class);
    }

    /**
     * public method
     */
    public void reviseFixedPriceItem(ReviseFixedPriceItemRequestType requestObject, XMLServiceCallback<ReviseFixedPriceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void reviseInventoryStatus(ReviseInventoryStatusRequestType requestObject, XMLServiceCallback<ReviseInventoryStatusResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseInventoryStatusResponseType.class);
    }

    /**
     * public method
     */
    public void reviseItem(ReviseItemRequestType requestObject, XMLServiceCallback<ReviseItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseItemResponseType.class);
    }

    /**
     * public method
     */
    public void reviseMyMessages(ReviseMyMessagesRequestType requestObject, XMLServiceCallback<ReviseMyMessagesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseMyMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void reviseMyMessagesFolders(ReviseMyMessagesFoldersRequestType requestObject, XMLServiceCallback<ReviseMyMessagesFoldersResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseMyMessagesFoldersResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerInventoryFolder(ReviseSellingManagerInventoryFolderRequestType requestObject, XMLServiceCallback<ReviseSellingManagerInventoryFolderResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerProduct(ReviseSellingManagerProductRequestType requestObject, XMLServiceCallback<ReviseSellingManagerProductResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseSellingManagerProductResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerSaleRecord(ReviseSellingManagerSaleRecordRequestType requestObject, XMLServiceCallback<ReviseSellingManagerSaleRecordResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseSellingManagerSaleRecordResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerTemplate(ReviseSellingManagerTemplateRequestType requestObject, XMLServiceCallback<ReviseSellingManagerTemplateResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ReviseSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void revokeToken(RevokeTokenRequestType requestObject, XMLServiceCallback<RevokeTokenResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, RevokeTokenResponseType.class);
    }

    /**
     * public method
     */
    public void saveItemToSellingManagerTemplate(SaveItemToSellingManagerTemplateRequestType requestObject, XMLServiceCallback<SaveItemToSellingManagerTemplateResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SaveItemToSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void sellerReverseDispute(SellerReverseDisputeRequestType requestObject, XMLServiceCallback<SellerReverseDisputeResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SellerReverseDisputeResponseType.class);
    }

    /**
     * public method
     */
    public void sendInvoice(SendInvoiceRequestType requestObject, XMLServiceCallback<SendInvoiceResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SendInvoiceResponseType.class);
    }

    /**
     * public method
     */
    public void setMessagePreferences(SetMessagePreferencesRequestType requestObject, XMLServiceCallback<SetMessagePreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetMessagePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void setNotificationPreferences(SetNotificationPreferencesRequestType requestObject, XMLServiceCallback<SetNotificationPreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetNotificationPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void setPromotionalSale(SetPromotionalSaleRequestType requestObject, XMLServiceCallback<SetPromotionalSaleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetPromotionalSaleResponseType.class);
    }

    /**
     * public method
     */
    public void setPromotionalSaleListings(SetPromotionalSaleListingsRequestType requestObject, XMLServiceCallback<SetPromotionalSaleListingsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetPromotionalSaleListingsResponseType.class);
    }

    /**
     * public method
     */
    public void setSellingManagerFeedbackOptions(SetSellingManagerFeedbackOptionsRequestType requestObject, XMLServiceCallback<SetSellingManagerFeedbackOptionsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetSellingManagerFeedbackOptionsResponseType.class);
    }

    /**
     * public method
     */
    public void setSellingManagerItemAutomationRule(SetSellingManagerItemAutomationRuleRequestType requestObject, XMLServiceCallback<SetSellingManagerItemAutomationRuleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetSellingManagerItemAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void setSellingManagerTemplateAutomationRule(SetSellingManagerTemplateAutomationRuleRequestType requestObject, XMLServiceCallback<SetSellingManagerTemplateAutomationRuleResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetSellingManagerTemplateAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void setShippingDiscountProfiles(SetShippingDiscountProfilesRequestType requestObject, XMLServiceCallback<SetShippingDiscountProfilesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetShippingDiscountProfilesResponseType.class);
    }

    /**
     * public method
     */
    public void setStore(SetStoreRequestType requestObject, XMLServiceCallback<SetStoreResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetStoreResponseType.class);
    }

    /**
     * public method
     */
    public void setStoreCategories(SetStoreCategoriesRequestType requestObject, XMLServiceCallback<SetStoreCategoriesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetStoreCategoriesResponseType.class);
    }

    /**
     * public method
     */
    public void setStoreCustomPage(SetStoreCustomPageRequestType requestObject, XMLServiceCallback<SetStoreCustomPageResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetStoreCustomPageResponseType.class);
    }

    /**
     * public method
     */
    public void setStorePreferences(SetStorePreferencesRequestType requestObject, XMLServiceCallback<SetStorePreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetStorePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void setTaxTable(SetTaxTableRequestType requestObject, XMLServiceCallback<SetTaxTableResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetTaxTableResponseType.class);
    }

    /**
     * public method
     */
    public void setUserNotes(SetUserNotesRequestType requestObject, XMLServiceCallback<SetUserNotesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetUserNotesResponseType.class);
    }

    /**
     * public method
     */
    public void setUserPreferences(SetUserPreferencesRequestType requestObject, XMLServiceCallback<SetUserPreferencesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, SetUserPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void uploadSiteHostedPictures(UploadSiteHostedPicturesRequestType requestObject, XMLServiceCallback<UploadSiteHostedPicturesResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, UploadSiteHostedPicturesResponseType.class);
    }

    /**
     * public method
     */
    public void validateChallengeInput(ValidateChallengeInputRequestType requestObject, XMLServiceCallback<ValidateChallengeInputResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ValidateChallengeInputResponseType.class);
    }

    /**
     * public method
     */
    public void validateTestUserRegistration(ValidateTestUserRegistrationRequestType requestObject, XMLServiceCallback<ValidateTestUserRegistrationResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, ValidateTestUserRegistrationResponseType.class);
    }

    /**
     * public method
     */
    public void veROReportItems(VeROReportItemsRequestType requestObject, XMLServiceCallback<VeROReportItemsResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, VeROReportItemsResponseType.class);
    }

    /**
     * public method
     */
    public void verifyAddFixedPriceItem(VerifyAddFixedPriceItemRequestType requestObject, XMLServiceCallback<VerifyAddFixedPriceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, VerifyAddFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void verifyAddItem(VerifyAddItemRequestType requestObject, XMLServiceCallback<VerifyAddItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, VerifyAddItemResponseType.class);
    }

    /**
     * public method
     */
    public void verifyAddSecondChanceItem(VerifyAddSecondChanceItemRequestType requestObject, XMLServiceCallback<VerifyAddSecondChanceItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, VerifyAddSecondChanceItemResponseType.class);
    }

    /**
     * public method
     */
    public void verifyRelistItem(VerifyRelistItemRequestType requestObject, XMLServiceCallback<VerifyRelistItemResponseType> serviceCallback) {


        super.invoke(requestObject, serviceCallback, VerifyRelistItemResponseType.class);
    }


}