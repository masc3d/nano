// Generated by wsdl compiler for android/java
// DO NOT CHANGE!
package com.ebay.trading.api.client;


import com.ebay.trading.api.*;
import com.leansoft.nano.ws.NanoSOAPClient;
import com.leansoft.nano.ws.SOAPServiceCallback;


/**
 * This class is the SOAP client to the EBayAPIInterface Web Service.
 */
public class EBayAPIInterface_SOAPClient extends NanoSOAPClient {


    /**
     * public method
     */
    public void addDispute(AddDisputeRequestType requestObject, SOAPServiceCallback<AddDisputeResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddDispute");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddDisputeResponseType.class);
    }

    /**
     * public method
     */
    public void addDisputeResponse(AddDisputeResponseRequestType requestObject, SOAPServiceCallback<AddDisputeResponseResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddDisputeResponse");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddDisputeResponseResponseType.class);
    }

    /**
     * public method
     */
    public void addFixedPriceItem(AddFixedPriceItemRequestType requestObject, SOAPServiceCallback<AddFixedPriceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddFixedPriceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void addItem(AddItemRequestType requestObject, SOAPServiceCallback<AddItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddItemResponseType.class);
    }

    /**
     * public method
     */
    public void addItemFromSellingManagerTemplate(AddItemFromSellingManagerTemplateRequestType requestObject, SOAPServiceCallback<AddItemFromSellingManagerTemplateResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddItemFromSellingManagerTemplate");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddItemFromSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void addItems(AddItemsRequestType requestObject, SOAPServiceCallback<AddItemsResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddItems");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddItemsResponseType.class);
    }

    /**
     * public method
     */
    public void addMemberMessageAAQToPartner(AddMemberMessageAAQToPartnerRequestType requestObject, SOAPServiceCallback<AddMemberMessageAAQToPartnerResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddMemberMessageAAQToPartner");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddMemberMessageAAQToPartnerResponseType.class);
    }

    /**
     * public method
     */
    public void addMemberMessageRTQ(AddMemberMessageRTQRequestType requestObject, SOAPServiceCallback<AddMemberMessageRTQResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddMemberMessageRTQ");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddMemberMessageRTQResponseType.class);
    }

    /**
     * public method
     */
    public void addMemberMessagesAAQToBidder(AddMemberMessagesAAQToBidderRequestType requestObject, SOAPServiceCallback<AddMemberMessagesAAQToBidderResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddMemberMessagesAAQToBidder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddMemberMessagesAAQToBidderResponseType.class);
    }

    /**
     * public method
     */
    public void addOrder(AddOrderRequestType requestObject, SOAPServiceCallback<AddOrderResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddOrder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddOrderResponseType.class);
    }

    /**
     * public method
     */
    public void addSecondChanceItem(AddSecondChanceItemRequestType requestObject, SOAPServiceCallback<AddSecondChanceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddSecondChanceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddSecondChanceItemResponseType.class);
    }

    /**
     * public method
     */
    public void addSellingManagerInventoryFolder(AddSellingManagerInventoryFolderRequestType requestObject, SOAPServiceCallback<AddSellingManagerInventoryFolderResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddSellingManagerInventoryFolder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void addSellingManagerProduct(AddSellingManagerProductRequestType requestObject, SOAPServiceCallback<AddSellingManagerProductResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddSellingManagerProduct");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddSellingManagerProductResponseType.class);
    }

    /**
     * public method
     */
    public void addSellingManagerTemplate(AddSellingManagerTemplateRequestType requestObject, SOAPServiceCallback<AddSellingManagerTemplateResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddSellingManagerTemplate");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void addToItemDescription(AddToItemDescriptionRequestType requestObject, SOAPServiceCallback<AddToItemDescriptionResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddToItemDescription");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddToItemDescriptionResponseType.class);
    }

    /**
     * public method
     */
    public void addToWatchList(AddToWatchListRequestType requestObject, SOAPServiceCallback<AddToWatchListResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddToWatchList");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddToWatchListResponseType.class);
    }

    /**
     * public method
     */
    public void addTransactionConfirmationItem(AddTransactionConfirmationItemRequestType requestObject, SOAPServiceCallback<AddTransactionConfirmationItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "AddTransactionConfirmationItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, AddTransactionConfirmationItemResponseType.class);
    }

    /**
     * public method
     */
    public void completeSale(CompleteSaleRequestType requestObject, SOAPServiceCallback<CompleteSaleResponseType> serviceCallback) {

        super.addUrlParam("callname", "CompleteSale");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, CompleteSaleResponseType.class);
    }

    /**
     * public method
     */
    public void confirmIdentity(ConfirmIdentityRequestType requestObject, SOAPServiceCallback<ConfirmIdentityResponseType> serviceCallback) {

        super.addUrlParam("callname", "ConfirmIdentity");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ConfirmIdentityResponseType.class);
    }

    /**
     * public method
     */
    public void deleteMyMessages(DeleteMyMessagesRequestType requestObject, SOAPServiceCallback<DeleteMyMessagesResponseType> serviceCallback) {

        super.addUrlParam("callname", "DeleteMyMessages");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DeleteMyMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerInventoryFolder(DeleteSellingManagerInventoryFolderRequestType requestObject, SOAPServiceCallback<DeleteSellingManagerInventoryFolderResponseType> serviceCallback) {

        super.addUrlParam("callname", "DeleteSellingManagerInventoryFolder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DeleteSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerItemAutomationRule(DeleteSellingManagerItemAutomationRuleRequestType requestObject, SOAPServiceCallback<DeleteSellingManagerItemAutomationRuleResponseType> serviceCallback) {

        super.addUrlParam("callname", "DeleteSellingManagerItemAutomationRule");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DeleteSellingManagerItemAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerProduct(DeleteSellingManagerProductRequestType requestObject, SOAPServiceCallback<DeleteSellingManagerProductResponseType> serviceCallback) {

        super.addUrlParam("callname", "DeleteSellingManagerProduct");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DeleteSellingManagerProductResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerTemplate(DeleteSellingManagerTemplateRequestType requestObject, SOAPServiceCallback<DeleteSellingManagerTemplateResponseType> serviceCallback) {

        super.addUrlParam("callname", "DeleteSellingManagerTemplate");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DeleteSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void deleteSellingManagerTemplateAutomationRule(DeleteSellingManagerTemplateAutomationRuleRequestType requestObject, SOAPServiceCallback<DeleteSellingManagerTemplateAutomationRuleResponseType> serviceCallback) {

        super.addUrlParam("callname", "DeleteSellingManagerTemplateAutomationRule");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DeleteSellingManagerTemplateAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void disableUnpaidItemAssistance(DisableUnpaidItemAssistanceRequestType requestObject, SOAPServiceCallback<DisableUnpaidItemAssistanceResponseType> serviceCallback) {

        super.addUrlParam("callname", "DisableUnpaidItemAssistance");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, DisableUnpaidItemAssistanceResponseType.class);
    }

    /**
     * public method
     */
    public void endFixedPriceItem(EndFixedPriceItemRequestType requestObject, SOAPServiceCallback<EndFixedPriceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "EndFixedPriceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, EndFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void endItem(EndItemRequestType requestObject, SOAPServiceCallback<EndItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "EndItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, EndItemResponseType.class);
    }

    /**
     * public method
     */
    public void endItems(EndItemsRequestType requestObject, SOAPServiceCallback<EndItemsResponseType> serviceCallback) {

        super.addUrlParam("callname", "EndItems");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, EndItemsResponseType.class);
    }

    /**
     * public method
     */
    public void extendSiteHostedPictures(ExtendSiteHostedPicturesRequestType requestObject, SOAPServiceCallback<ExtendSiteHostedPicturesResponseType> serviceCallback) {

        super.addUrlParam("callname", "ExtendSiteHostedPictures");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ExtendSiteHostedPicturesResponseType.class);
    }

    /**
     * public method
     */
    public void fetchToken(FetchTokenRequestType requestObject, SOAPServiceCallback<FetchTokenResponseType> serviceCallback) {

        super.addUrlParam("callname", "FetchToken");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, FetchTokenResponseType.class);
    }

    /**
     * public method
     */
    public void getAccount(GetAccountRequestType requestObject, SOAPServiceCallback<GetAccountResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetAccount");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetAccountResponseType.class);
    }

    /**
     * public method
     */
    public void getAdFormatLeads(GetAdFormatLeadsRequestType requestObject, SOAPServiceCallback<GetAdFormatLeadsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetAdFormatLeads");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetAdFormatLeadsResponseType.class);
    }

    /**
     * public method
     */
    public void getAllBidders(GetAllBiddersRequestType requestObject, SOAPServiceCallback<GetAllBiddersResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetAllBidders");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetAllBiddersResponseType.class);
    }

    /**
     * public method
     */
    public void getApiAccessRules(GetApiAccessRulesRequestType requestObject, SOAPServiceCallback<GetApiAccessRulesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetApiAccessRules");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetApiAccessRulesResponseType.class);
    }

    /**
     * public method
     */
    public void getAttributesCS(GetAttributesCSRequestType requestObject, SOAPServiceCallback<GetAttributesCSResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetAttributesCS");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetAttributesCSResponseType.class);
    }

    /**
     * public method
     */
    public void getAttributesXSL(GetAttributesXSLRequestType requestObject, SOAPServiceCallback<GetAttributesXSLResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetAttributesXSL");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetAttributesXSLResponseType.class);
    }

    /**
     * public method
     */
    public void getBestOffers(GetBestOffersRequestType requestObject, SOAPServiceCallback<GetBestOffersResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetBestOffers");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetBestOffersResponseType.class);
    }

    /**
     * public method
     */
    public void getBidderList(GetBidderListRequestType requestObject, SOAPServiceCallback<GetBidderListResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetBidderList");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetBidderListResponseType.class);
    }

    /**
     * public method
     */
    public void getCategories(GetCategoriesRequestType requestObject, SOAPServiceCallback<GetCategoriesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCategories");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCategoriesResponseType.class);
    }

    /**
     * public method
     */
    public void getCategory2CS(GetCategory2CSRequestType requestObject, SOAPServiceCallback<GetCategory2CSResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCategory2CS");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCategory2CSResponseType.class);
    }

    /**
     * public method
     */
    public void getCategoryFeatures(GetCategoryFeaturesRequestType requestObject, SOAPServiceCallback<GetCategoryFeaturesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCategoryFeatures");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCategoryFeaturesResponseType.class);
    }

    /**
     * public method
     */
    public void getCategoryMappings(GetCategoryMappingsRequestType requestObject, SOAPServiceCallback<GetCategoryMappingsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCategoryMappings");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCategoryMappingsResponseType.class);
    }

    /**
     * public method
     */
    public void getCategorySpecifics(GetCategorySpecificsRequestType requestObject, SOAPServiceCallback<GetCategorySpecificsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCategorySpecifics");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCategorySpecificsResponseType.class);
    }

    /**
     * public method
     */
    public void getChallengeToken(GetChallengeTokenRequestType requestObject, SOAPServiceCallback<GetChallengeTokenResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetChallengeToken");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetChallengeTokenResponseType.class);
    }

    /**
     * public method
     */
    public void getCharities(GetCharitiesRequestType requestObject, SOAPServiceCallback<GetCharitiesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCharities");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCharitiesResponseType.class);
    }

    /**
     * public method
     */
    public void getClientAlertsAuthToken(GetClientAlertsAuthTokenRequestType requestObject, SOAPServiceCallback<GetClientAlertsAuthTokenResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetClientAlertsAuthToken");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetClientAlertsAuthTokenResponseType.class);
    }

    /**
     * public method
     */
    public void getContextualKeywords(GetContextualKeywordsRequestType requestObject, SOAPServiceCallback<GetContextualKeywordsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetContextualKeywords");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetContextualKeywordsResponseType.class);
    }

    /**
     * public method
     */
    public void getCrossPromotions(GetCrossPromotionsRequestType requestObject, SOAPServiceCallback<GetCrossPromotionsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetCrossPromotions");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetCrossPromotionsResponseType.class);
    }

    /**
     * public method
     */
    public void getDescriptionTemplates(GetDescriptionTemplatesRequestType requestObject, SOAPServiceCallback<GetDescriptionTemplatesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetDescriptionTemplates");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetDescriptionTemplatesResponseType.class);
    }

    /**
     * public method
     */
    public void getDispute(GetDisputeRequestType requestObject, SOAPServiceCallback<GetDisputeResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetDispute");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetDisputeResponseType.class);
    }

    /**
     * public method
     */
    public void getFeedback(GetFeedbackRequestType requestObject, SOAPServiceCallback<GetFeedbackResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetFeedback");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void getItem(GetItemRequestType requestObject, SOAPServiceCallback<GetItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetItemResponseType.class);
    }

    /**
     * public method
     */
    public void getItemRecommendations(GetItemRecommendationsRequestType requestObject, SOAPServiceCallback<GetItemRecommendationsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetItemRecommendations");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetItemRecommendationsResponseType.class);
    }

    /**
     * public method
     */
    public void getItemShipping(GetItemShippingRequestType requestObject, SOAPServiceCallback<GetItemShippingResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetItemShipping");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetItemShippingResponseType.class);
    }

    /**
     * public method
     */
    public void getItemTransactions(GetItemTransactionsRequestType requestObject, SOAPServiceCallback<GetItemTransactionsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetItemTransactions");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetItemTransactionsResponseType.class);
    }

    /**
     * public method
     */
    public void getItemsAwaitingFeedback(GetItemsAwaitingFeedbackRequestType requestObject, SOAPServiceCallback<GetItemsAwaitingFeedbackResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetItemsAwaitingFeedback");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetItemsAwaitingFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void getMemberMessages(GetMemberMessagesRequestType requestObject, SOAPServiceCallback<GetMemberMessagesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetMemberMessages");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetMemberMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void getMessagePreferences(GetMessagePreferencesRequestType requestObject, SOAPServiceCallback<GetMessagePreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetMessagePreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetMessagePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getMyMessages(GetMyMessagesRequestType requestObject, SOAPServiceCallback<GetMyMessagesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetMyMessages");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetMyMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void getMyeBayBuying(GetMyeBayBuyingRequestType requestObject, SOAPServiceCallback<GetMyeBayBuyingResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetMyeBayBuying");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetMyeBayBuyingResponseType.class);
    }

    /**
     * public method
     */
    public void getMyeBayReminders(GetMyeBayRemindersRequestType requestObject, SOAPServiceCallback<GetMyeBayRemindersResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetMyeBayReminders");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetMyeBayRemindersResponseType.class);
    }

    /**
     * public method
     */
    public void getMyeBaySelling(GetMyeBaySellingRequestType requestObject, SOAPServiceCallback<GetMyeBaySellingResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetMyeBaySelling");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetMyeBaySellingResponseType.class);
    }

    /**
     * public method
     */
    public void getNotificationPreferences(GetNotificationPreferencesRequestType requestObject, SOAPServiceCallback<GetNotificationPreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetNotificationPreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetNotificationPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getNotificationsUsage(GetNotificationsUsageRequestType requestObject, SOAPServiceCallback<GetNotificationsUsageResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetNotificationsUsage");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetNotificationsUsageResponseType.class);
    }

    /**
     * public method
     */
    public void getOrderTransactions(GetOrderTransactionsRequestType requestObject, SOAPServiceCallback<GetOrderTransactionsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetOrderTransactions");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetOrderTransactionsResponseType.class);
    }

    /**
     * public method
     */
    public void getOrders(GetOrdersRequestType requestObject, SOAPServiceCallback<GetOrdersResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetOrders");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetOrdersResponseType.class);
    }

    /**
     * public method
     */
    public void getProductFamilyMembers(GetProductFamilyMembersRequestType requestObject, SOAPServiceCallback<GetProductFamilyMembersResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetProductFamilyMembers");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetProductFamilyMembersResponseType.class);
    }

    /**
     * public method
     */
    public void getProductFinder(GetProductFinderRequestType requestObject, SOAPServiceCallback<GetProductFinderResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetProductFinder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetProductFinderResponseType.class);
    }

    /**
     * public method
     */
    public void getProductFinderXSL(GetProductFinderXSLRequestType requestObject, SOAPServiceCallback<GetProductFinderXSLResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetProductFinderXSL");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetProductFinderXSLResponseType.class);
    }

    /**
     * public method
     */
    public void getProductSearchPage(GetProductSearchPageRequestType requestObject, SOAPServiceCallback<GetProductSearchPageResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetProductSearchPage");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetProductSearchPageResponseType.class);
    }

    /**
     * public method
     */
    public void getProductSearchResults(GetProductSearchResultsRequestType requestObject, SOAPServiceCallback<GetProductSearchResultsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetProductSearchResults");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetProductSearchResultsResponseType.class);
    }

    /**
     * public method
     */
    public void getProductSellingPages(GetProductSellingPagesRequestType requestObject, SOAPServiceCallback<GetProductSellingPagesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetProductSellingPages");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetProductSellingPagesResponseType.class);
    }

    /**
     * public method
     */
    public void getPromotionRules(GetPromotionRulesRequestType requestObject, SOAPServiceCallback<GetPromotionRulesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetPromotionRules");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetPromotionRulesResponseType.class);
    }

    /**
     * public method
     */
    public void getPromotionalSaleDetails(GetPromotionalSaleDetailsRequestType requestObject, SOAPServiceCallback<GetPromotionalSaleDetailsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetPromotionalSaleDetails");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetPromotionalSaleDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerDashboard(GetSellerDashboardRequestType requestObject, SOAPServiceCallback<GetSellerDashboardResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellerDashboard");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellerDashboardResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerEvents(GetSellerEventsRequestType requestObject, SOAPServiceCallback<GetSellerEventsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellerEvents");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellerEventsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerList(GetSellerListRequestType requestObject, SOAPServiceCallback<GetSellerListResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellerList");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellerListResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerPayments(GetSellerPaymentsRequestType requestObject, SOAPServiceCallback<GetSellerPaymentsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellerPayments");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellerPaymentsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellerTransactions(GetSellerTransactionsRequestType requestObject, SOAPServiceCallback<GetSellerTransactionsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellerTransactions");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellerTransactionsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerAlerts(GetSellingManagerAlertsRequestType requestObject, SOAPServiceCallback<GetSellingManagerAlertsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerAlerts");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerAlertsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerEmailLog(GetSellingManagerEmailLogRequestType requestObject, SOAPServiceCallback<GetSellingManagerEmailLogResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerEmailLog");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerEmailLogResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerInventory(GetSellingManagerInventoryRequestType requestObject, SOAPServiceCallback<GetSellingManagerInventoryResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerInventory");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerInventoryResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerInventoryFolder(GetSellingManagerInventoryFolderRequestType requestObject, SOAPServiceCallback<GetSellingManagerInventoryFolderResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerInventoryFolder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerItemAutomationRule(GetSellingManagerItemAutomationRuleRequestType requestObject, SOAPServiceCallback<GetSellingManagerItemAutomationRuleResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerItemAutomationRule");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerItemAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerSaleRecord(GetSellingManagerSaleRecordRequestType requestObject, SOAPServiceCallback<GetSellingManagerSaleRecordResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerSaleRecord");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerSaleRecordResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerSoldListings(GetSellingManagerSoldListingsRequestType requestObject, SOAPServiceCallback<GetSellingManagerSoldListingsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerSoldListings");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerSoldListingsResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerTemplateAutomationRule(GetSellingManagerTemplateAutomationRuleRequestType requestObject, SOAPServiceCallback<GetSellingManagerTemplateAutomationRuleResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerTemplateAutomationRule");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerTemplateAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void getSellingManagerTemplates(GetSellingManagerTemplatesRequestType requestObject, SOAPServiceCallback<GetSellingManagerTemplatesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSellingManagerTemplates");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSellingManagerTemplatesResponseType.class);
    }

    /**
     * public method
     */
    public void getSessionID(GetSessionIDRequestType requestObject, SOAPServiceCallback<GetSessionIDResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSessionID");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSessionIDResponseType.class);
    }

    /**
     * public method
     */
    public void getShippingDiscountProfiles(GetShippingDiscountProfilesRequestType requestObject, SOAPServiceCallback<GetShippingDiscountProfilesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetShippingDiscountProfiles");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetShippingDiscountProfilesResponseType.class);
    }

    /**
     * public method
     */
    public void getStore(GetStoreRequestType requestObject, SOAPServiceCallback<GetStoreResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetStore");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetStoreResponseType.class);
    }

    /**
     * public method
     */
    public void getStoreCategoryUpdateStatus(GetStoreCategoryUpdateStatusRequestType requestObject, SOAPServiceCallback<GetStoreCategoryUpdateStatusResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetStoreCategoryUpdateStatus");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetStoreCategoryUpdateStatusResponseType.class);
    }

    /**
     * public method
     */
    public void getStoreCustomPage(GetStoreCustomPageRequestType requestObject, SOAPServiceCallback<GetStoreCustomPageResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetStoreCustomPage");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetStoreCustomPageResponseType.class);
    }

    /**
     * public method
     */
    public void getStoreOptions(GetStoreOptionsRequestType requestObject, SOAPServiceCallback<GetStoreOptionsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetStoreOptions");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetStoreOptionsResponseType.class);
    }

    /**
     * public method
     */
    public void getStorePreferences(GetStorePreferencesRequestType requestObject, SOAPServiceCallback<GetStorePreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetStorePreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetStorePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getSuggestedCategories(GetSuggestedCategoriesRequestType requestObject, SOAPServiceCallback<GetSuggestedCategoriesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetSuggestedCategories");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetSuggestedCategoriesResponseType.class);
    }

    /**
     * public method
     */
    public void getTaxTable(GetTaxTableRequestType requestObject, SOAPServiceCallback<GetTaxTableResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetTaxTable");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetTaxTableResponseType.class);
    }

    /**
     * public method
     */
    public void getTokenStatus(GetTokenStatusRequestType requestObject, SOAPServiceCallback<GetTokenStatusResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetTokenStatus");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetTokenStatusResponseType.class);
    }

    /**
     * public method
     */
    public void getUser(GetUserRequestType requestObject, SOAPServiceCallback<GetUserResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetUser");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetUserResponseType.class);
    }

    /**
     * public method
     */
    public void getUserContactDetails(GetUserContactDetailsRequestType requestObject, SOAPServiceCallback<GetUserContactDetailsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetUserContactDetails");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetUserContactDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void getUserDisputes(GetUserDisputesRequestType requestObject, SOAPServiceCallback<GetUserDisputesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetUserDisputes");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetUserDisputesResponseType.class);
    }

    /**
     * public method
     */
    public void getUserPreferences(GetUserPreferencesRequestType requestObject, SOAPServiceCallback<GetUserPreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetUserPreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetUserPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void getVeROReasonCodeDetails(GetVeROReasonCodeDetailsRequestType requestObject, SOAPServiceCallback<GetVeROReasonCodeDetailsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetVeROReasonCodeDetails");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetVeROReasonCodeDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void getVeROReportStatus(GetVeROReportStatusRequestType requestObject, SOAPServiceCallback<GetVeROReportStatusResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetVeROReportStatus");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetVeROReportStatusResponseType.class);
    }

    /**
     * public method
     */
    public void getWantItNowPost(GetWantItNowPostRequestType requestObject, SOAPServiceCallback<GetWantItNowPostResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetWantItNowPost");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetWantItNowPostResponseType.class);
    }

    /**
     * public method
     */
    public void getWantItNowSearchResults(GetWantItNowSearchResultsRequestType requestObject, SOAPServiceCallback<GetWantItNowSearchResultsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GetWantItNowSearchResults");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GetWantItNowSearchResultsResponseType.class);
    }

    /**
     * public method
     */
    public void geteBayDetails(GeteBayDetailsRequestType requestObject, SOAPServiceCallback<GeteBayDetailsResponseType> serviceCallback) {

        super.addUrlParam("callname", "GeteBayDetails");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GeteBayDetailsResponseType.class);
    }

    /**
     * public method
     */
    public void geteBayOfficialTime(GeteBayOfficialTimeRequestType requestObject, SOAPServiceCallback<GeteBayOfficialTimeResponseType> serviceCallback) {

        super.addUrlParam("callname", "GeteBayOfficialTime");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, GeteBayOfficialTimeResponseType.class);
    }

    /**
     * public method
     */
    public void issueRefund(IssueRefundRequestType requestObject, SOAPServiceCallback<IssueRefundResponseType> serviceCallback) {

        super.addUrlParam("callname", "IssueRefund");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, IssueRefundResponseType.class);
    }

    /**
     * public method
     */
    public void leaveFeedback(LeaveFeedbackRequestType requestObject, SOAPServiceCallback<LeaveFeedbackResponseType> serviceCallback) {

        super.addUrlParam("callname", "LeaveFeedback");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, LeaveFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void moveSellingManagerInventoryFolder(MoveSellingManagerInventoryFolderRequestType requestObject, SOAPServiceCallback<MoveSellingManagerInventoryFolderResponseType> serviceCallback) {

        super.addUrlParam("callname", "MoveSellingManagerInventoryFolder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, MoveSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void placeOffer(PlaceOfferRequestType requestObject, SOAPServiceCallback<PlaceOfferResponseType> serviceCallback) {

        super.addUrlParam("callname", "PlaceOffer");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, PlaceOfferResponseType.class);
    }

    /**
     * public method
     */
    public void relistFixedPriceItem(RelistFixedPriceItemRequestType requestObject, SOAPServiceCallback<RelistFixedPriceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "RelistFixedPriceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RelistFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void relistItem(RelistItemRequestType requestObject, SOAPServiceCallback<RelistItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "RelistItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RelistItemResponseType.class);
    }

    /**
     * public method
     */
    public void removeFromWatchList(RemoveFromWatchListRequestType requestObject, SOAPServiceCallback<RemoveFromWatchListResponseType> serviceCallback) {

        super.addUrlParam("callname", "RemoveFromWatchList");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RemoveFromWatchListResponseType.class);
    }

    /**
     * public method
     */
    public void respondToBestOffer(RespondToBestOfferRequestType requestObject, SOAPServiceCallback<RespondToBestOfferResponseType> serviceCallback) {

        super.addUrlParam("callname", "RespondToBestOffer");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RespondToBestOfferResponseType.class);
    }

    /**
     * public method
     */
    public void respondToFeedback(RespondToFeedbackRequestType requestObject, SOAPServiceCallback<RespondToFeedbackResponseType> serviceCallback) {

        super.addUrlParam("callname", "RespondToFeedback");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RespondToFeedbackResponseType.class);
    }

    /**
     * public method
     */
    public void respondToWantItNowPost(RespondToWantItNowPostRequestType requestObject, SOAPServiceCallback<RespondToWantItNowPostResponseType> serviceCallback) {

        super.addUrlParam("callname", "RespondToWantItNowPost");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RespondToWantItNowPostResponseType.class);
    }

    /**
     * public method
     */
    public void reviseCheckoutStatus(ReviseCheckoutStatusRequestType requestObject, SOAPServiceCallback<ReviseCheckoutStatusResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseCheckoutStatus");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseCheckoutStatusResponseType.class);
    }

    /**
     * public method
     */
    public void reviseFixedPriceItem(ReviseFixedPriceItemRequestType requestObject, SOAPServiceCallback<ReviseFixedPriceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseFixedPriceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void reviseInventoryStatus(ReviseInventoryStatusRequestType requestObject, SOAPServiceCallback<ReviseInventoryStatusResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseInventoryStatus");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseInventoryStatusResponseType.class);
    }

    /**
     * public method
     */
    public void reviseItem(ReviseItemRequestType requestObject, SOAPServiceCallback<ReviseItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseItemResponseType.class);
    }

    /**
     * public method
     */
    public void reviseMyMessages(ReviseMyMessagesRequestType requestObject, SOAPServiceCallback<ReviseMyMessagesResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseMyMessages");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseMyMessagesResponseType.class);
    }

    /**
     * public method
     */
    public void reviseMyMessagesFolders(ReviseMyMessagesFoldersRequestType requestObject, SOAPServiceCallback<ReviseMyMessagesFoldersResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseMyMessagesFolders");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseMyMessagesFoldersResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerInventoryFolder(ReviseSellingManagerInventoryFolderRequestType requestObject, SOAPServiceCallback<ReviseSellingManagerInventoryFolderResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseSellingManagerInventoryFolder");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseSellingManagerInventoryFolderResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerProduct(ReviseSellingManagerProductRequestType requestObject, SOAPServiceCallback<ReviseSellingManagerProductResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseSellingManagerProduct");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseSellingManagerProductResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerSaleRecord(ReviseSellingManagerSaleRecordRequestType requestObject, SOAPServiceCallback<ReviseSellingManagerSaleRecordResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseSellingManagerSaleRecord");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseSellingManagerSaleRecordResponseType.class);
    }

    /**
     * public method
     */
    public void reviseSellingManagerTemplate(ReviseSellingManagerTemplateRequestType requestObject, SOAPServiceCallback<ReviseSellingManagerTemplateResponseType> serviceCallback) {

        super.addUrlParam("callname", "ReviseSellingManagerTemplate");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ReviseSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void revokeToken(RevokeTokenRequestType requestObject, SOAPServiceCallback<RevokeTokenResponseType> serviceCallback) {

        super.addUrlParam("callname", "RevokeToken");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, RevokeTokenResponseType.class);
    }

    /**
     * public method
     */
    public void saveItemToSellingManagerTemplate(SaveItemToSellingManagerTemplateRequestType requestObject, SOAPServiceCallback<SaveItemToSellingManagerTemplateResponseType> serviceCallback) {

        super.addUrlParam("callname", "SaveItemToSellingManagerTemplate");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SaveItemToSellingManagerTemplateResponseType.class);
    }

    /**
     * public method
     */
    public void sellerReverseDispute(SellerReverseDisputeRequestType requestObject, SOAPServiceCallback<SellerReverseDisputeResponseType> serviceCallback) {

        super.addUrlParam("callname", "SellerReverseDispute");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SellerReverseDisputeResponseType.class);
    }

    /**
     * public method
     */
    public void sendInvoice(SendInvoiceRequestType requestObject, SOAPServiceCallback<SendInvoiceResponseType> serviceCallback) {

        super.addUrlParam("callname", "SendInvoice");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SendInvoiceResponseType.class);
    }

    /**
     * public method
     */
    public void setMessagePreferences(SetMessagePreferencesRequestType requestObject, SOAPServiceCallback<SetMessagePreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetMessagePreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetMessagePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void setNotificationPreferences(SetNotificationPreferencesRequestType requestObject, SOAPServiceCallback<SetNotificationPreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetNotificationPreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetNotificationPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void setPromotionalSale(SetPromotionalSaleRequestType requestObject, SOAPServiceCallback<SetPromotionalSaleResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetPromotionalSale");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetPromotionalSaleResponseType.class);
    }

    /**
     * public method
     */
    public void setPromotionalSaleListings(SetPromotionalSaleListingsRequestType requestObject, SOAPServiceCallback<SetPromotionalSaleListingsResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetPromotionalSaleListings");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetPromotionalSaleListingsResponseType.class);
    }

    /**
     * public method
     */
    public void setSellingManagerFeedbackOptions(SetSellingManagerFeedbackOptionsRequestType requestObject, SOAPServiceCallback<SetSellingManagerFeedbackOptionsResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetSellingManagerFeedbackOptions");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetSellingManagerFeedbackOptionsResponseType.class);
    }

    /**
     * public method
     */
    public void setSellingManagerItemAutomationRule(SetSellingManagerItemAutomationRuleRequestType requestObject, SOAPServiceCallback<SetSellingManagerItemAutomationRuleResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetSellingManagerItemAutomationRule");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetSellingManagerItemAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void setSellingManagerTemplateAutomationRule(SetSellingManagerTemplateAutomationRuleRequestType requestObject, SOAPServiceCallback<SetSellingManagerTemplateAutomationRuleResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetSellingManagerTemplateAutomationRule");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetSellingManagerTemplateAutomationRuleResponseType.class);
    }

    /**
     * public method
     */
    public void setShippingDiscountProfiles(SetShippingDiscountProfilesRequestType requestObject, SOAPServiceCallback<SetShippingDiscountProfilesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetShippingDiscountProfiles");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetShippingDiscountProfilesResponseType.class);
    }

    /**
     * public method
     */
    public void setStore(SetStoreRequestType requestObject, SOAPServiceCallback<SetStoreResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetStore");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetStoreResponseType.class);
    }

    /**
     * public method
     */
    public void setStoreCategories(SetStoreCategoriesRequestType requestObject, SOAPServiceCallback<SetStoreCategoriesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetStoreCategories");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetStoreCategoriesResponseType.class);
    }

    /**
     * public method
     */
    public void setStoreCustomPage(SetStoreCustomPageRequestType requestObject, SOAPServiceCallback<SetStoreCustomPageResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetStoreCustomPage");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetStoreCustomPageResponseType.class);
    }

    /**
     * public method
     */
    public void setStorePreferences(SetStorePreferencesRequestType requestObject, SOAPServiceCallback<SetStorePreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetStorePreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetStorePreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void setTaxTable(SetTaxTableRequestType requestObject, SOAPServiceCallback<SetTaxTableResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetTaxTable");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetTaxTableResponseType.class);
    }

    /**
     * public method
     */
    public void setUserNotes(SetUserNotesRequestType requestObject, SOAPServiceCallback<SetUserNotesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetUserNotes");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetUserNotesResponseType.class);
    }

    /**
     * public method
     */
    public void setUserPreferences(SetUserPreferencesRequestType requestObject, SOAPServiceCallback<SetUserPreferencesResponseType> serviceCallback) {

        super.addUrlParam("callname", "SetUserPreferences");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, SetUserPreferencesResponseType.class);
    }

    /**
     * public method
     */
    public void uploadSiteHostedPictures(UploadSiteHostedPicturesRequestType requestObject, SOAPServiceCallback<UploadSiteHostedPicturesResponseType> serviceCallback) {

        super.addUrlParam("callname", "UploadSiteHostedPictures");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, UploadSiteHostedPicturesResponseType.class);
    }

    /**
     * public method
     */
    public void validateChallengeInput(ValidateChallengeInputRequestType requestObject, SOAPServiceCallback<ValidateChallengeInputResponseType> serviceCallback) {

        super.addUrlParam("callname", "ValidateChallengeInput");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ValidateChallengeInputResponseType.class);
    }

    /**
     * public method
     */
    public void validateTestUserRegistration(ValidateTestUserRegistrationRequestType requestObject, SOAPServiceCallback<ValidateTestUserRegistrationResponseType> serviceCallback) {

        super.addUrlParam("callname", "ValidateTestUserRegistration");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, ValidateTestUserRegistrationResponseType.class);
    }

    /**
     * public method
     */
    public void veROReportItems(VeROReportItemsRequestType requestObject, SOAPServiceCallback<VeROReportItemsResponseType> serviceCallback) {

        super.addUrlParam("callname", "VeROReportItems");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, VeROReportItemsResponseType.class);
    }

    /**
     * public method
     */
    public void verifyAddFixedPriceItem(VerifyAddFixedPriceItemRequestType requestObject, SOAPServiceCallback<VerifyAddFixedPriceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "VerifyAddFixedPriceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, VerifyAddFixedPriceItemResponseType.class);
    }

    /**
     * public method
     */
    public void verifyAddItem(VerifyAddItemRequestType requestObject, SOAPServiceCallback<VerifyAddItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "VerifyAddItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, VerifyAddItemResponseType.class);
    }

    /**
     * public method
     */
    public void verifyAddSecondChanceItem(VerifyAddSecondChanceItemRequestType requestObject, SOAPServiceCallback<VerifyAddSecondChanceItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "VerifyAddSecondChanceItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, VerifyAddSecondChanceItemResponseType.class);
    }

    /**
     * public method
     */
    public void verifyRelistItem(VerifyRelistItemRequestType requestObject, SOAPServiceCallback<VerifyRelistItemResponseType> serviceCallback) {

        super.addUrlParam("callname", "VerifyRelistItem");
        if (requestObject.version == null) {
            requestObject.version = super.getUrlParams().get("version");
        }

        super.invoke(requestObject, serviceCallback, VerifyRelistItemResponseType.class);
    }


}